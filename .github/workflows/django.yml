name: Django CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    timeout-minutes: 10
    strategy:
      max-parallel: 4

      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Start PostgreSQL
      run: |
          sudo systemctl start postgresql.service
          sudo -u postgres createuser -s runner

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      env:
        DB_ENGINE: ${{ secrets.DB_ENGINE}}
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_HOST: postgres
        DB_PORT: ${{ secrets.DB_PORT}}
        DB_DATABASE: postgres
        DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE}}
        DEBUG: False
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY}}
        CORS_ALLOWED_HOST: ${{ secrets.CORS_ALLOWED_HOST}}
        CORS_ALLOW_ALL_ORIGINS: ${{ secrets.CORS_ALLOW_ALL_ORIGINS}}
        CSRF_TRUSTED_FRONTEND: ${{ secrets.CSRF_TRUSTED_FRONTEND}}
        CSRF_TRUSTED_BACKEND: ${{ secrets.CSRF_TRUSTED_BACKEND}}
        DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL}}
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER}}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD}}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST}}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT}}
      run: |
        python manage.py test
